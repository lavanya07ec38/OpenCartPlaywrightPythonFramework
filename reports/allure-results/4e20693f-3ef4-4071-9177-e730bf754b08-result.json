{"name": "test_invalid_user_login", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for locator(\"input[value=\\\"Login\\\"]\")", "trace": "page = <Page url='http://localhost/opencart/upload/index.php?route=account/login&language=en-gb'>\n\n    @pytest.mark.sanity\n    @pytest.mark.regression\n    def test_invalid_user_login(page):\n        \"\"\"\n        Automated Test Case: Verify that login fails for invalid user credentials.\n        \"\"\"\n    \n        # --- Page Object Initialization ---\n        home_page = HomePage(page)\n        login_page = LoginPage(page)\n    \n        # --- Step 1: Navigate to Login Page ---\n        home_page.click_my_account()\n        home_page.click_login()\n    \n        # --- Step 2: Enter Invalid Credentials ---\n        login_page.set_email(Config.invalid_email)\n        login_page.set_password(Config.invalid_password)\n>       login_page.click_login()\n\ntests\\test_login.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:49: in click_login\n    self.btn_login.click()\n.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15543: in click\n    self._sync(\n.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:549: in click\n    await self._channel.send(\"click\", self._timeout, locals_to_params(locals()))\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001F252A1B8C0>\ncb = <function Channel.send.<locals>.<lambda> at 0x000001F252AB62A0>\nis_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for locator(\"input[value=\\\"Login\\\"]\")\n\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: TimeoutError"}, "description": "\nAutomated Test Case: Verify that login fails for invalid user credentials.\n", "attachments": [{"name": "stdout", "source": "0a0bd6b0-8b78-4d15-b7ff-d7b154c844a1-attachment.txt", "type": "text/plain"}], "start": 1761760299199, "stop": 1761760330362, "uuid": "4a7e2195-64d8-4a71-8d31-6f924932891d", "historyId": "9668de7afec4aea2e85f39c25138877c", "testCaseId": "9668de7afec4aea2e85f39c25138877c", "fullName": "tests.test_login#test_invalid_user_login", "labels": [{"name": "tag", "value": "regression"}, {"name": "tag", "value": "sanity"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "DESKTOP-GG4538Q"}, {"name": "thread", "value": "28416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py"]}