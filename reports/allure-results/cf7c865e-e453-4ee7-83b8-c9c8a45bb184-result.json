{"name": "test_user_registration", "status": "broken", "statusDetails": {"message": "ValueError: no option named 'base-url'", "trace": "self = <_pytest.config.Config object at 0x00000284DE1A5590>, name = 'base-url'\ndefault = <NOTSET>, skip = False\n\n    def getoption(self, name: str, default: Any = notset, skip: bool = False):\n        \"\"\"Return command line option value.\n    \n        :param name: Name of the option. You may also specify\n            the literal ``--OPT`` option instead of the \"dest\" option name.\n        :param default: Fallback value if no option of that name is **declared** via :hook:`pytest_addoption`.\n            Note this parameter will be ignored when the option is **declared** even if the option's value is ``None``.\n        :param skip: If ``True``, raise :func:`pytest.skip` if option is undeclared or has a ``None`` value.\n            Note that even if ``True``, if a default was specified it will be returned instead of a skip.\n        \"\"\"\n        name = self._opt2dest.get(name, name)\n        try:\n>           val = getattr(self.option, name)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           AttributeError: 'Namespace' object has no attribute 'base-url'. Did you mean: 'base_url'?\n\n.venv\\Lib\\site-packages\\_pytest\\config\\__init__.py:1743: AttributeError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'page' for <Function test_user_registration>>\nbrowser_context = <BrowserContext browser=<Browser type=<BrowserType name=chromium executable_path=C:\\Users\\Hasini\\AppData\\Local\\ms-playwright\\chromium-1187\\chrome-win\\chrome.exe> version=140.0.7339.16>>\n\n    @pytest.fixture(scope=\"function\")\n    def page(request, browser_context):\n>       base_url = normalize_config(get_config_value(request.config, \"base-url\"))\n                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nconftest.py:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nconfig = <_pytest.config.Config object at 0x00000284DE1A5590>\noption_name = 'base-url'\n\n    def get_config_value(config, option_name):\n        \"\"\"\n        Helper to read configuration values.\n        Tries to get from command line first, otherwise from pytest.ini.\n        Supports both string and boolean options.\n        \"\"\"\n        # Try command-line first\n>       cmd_value = config.getoption(option_name)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       ValueError: no option named 'base-url'\n\nconftest.py:38: ValueError"}, "attachments": [{"name": "stdout", "source": "4d080d7c-8fce-4cfa-95cb-40e9965ff4e4-attachment.txt", "type": "text/plain"}], "start": 1761492118343, "stop": 1761492118343, "uuid": "99d87752-4b15-4f10-9df9-c7b838109083", "historyId": "541394ea0cfde4c8462c2d79980c4244", "testCaseId": "541394ea0cfde4c8462c2d79980c4244", "fullName": "tests.test_user_registration#test_user_registration", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_user_registration"}, {"name": "host", "value": "DESKTOP-GG4538Q"}, {"name": "thread", "value": "30884-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_user_registration"}], "titlePath": ["tests", "test_user_registration.py"]}